name: CICD

on:
  workflow_dispatch:
  push:
    branches:
      - 'main'
      - 'alpha'
      - 'beta'
      - 'dev'
  pull_request:
    types: [opened, reopened, synchronize]

env:
  semantic_version: 19

jobs:
  create-release:
    name: Create Release
    runs-on: ubuntu-latest
    outputs:
      new_release_published: ${{ steps.semantic.outputs.new_release_published }}
      new_release_version: ${{ (steps.semantic.outputs.new_release_published && steps.semantic.outputs.new_release_version) || '0.0.1' }}
    steps:
    - uses: actions/checkout@v3

    - name: Configure Git
      run: |
        git config user.name "$GITHUB_ACTOR"
        git config user.email "$GITHUB_ACTOR@users.noreply.github.com"

    - name: Semantic Release
      uses: cycjimmy/semantic-release-action@v2
      id: semantic
      with:
        semantic_version: ${{ env.semantic_version }}
        dry_run: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Setup .NET Core
      uses: actions/setup-dotnet@v3
      with:
        global-json-file: global.json

    - name: .NET Build
      run: dotnet build -c Release

    - name: Docker Build
      run: docker build -t ingress-nginx-validate-jwt -f ./ingress-nginx-validate-jwt/Dockerfile --build-arg VERSION=${{ (steps.semantic.outputs.new_release_published && steps.semantic.outputs.new_release_version) || '0.0.1' }} .

    - name: .NET Test
      run: dotnet test -c Release --collect:"XPlat Code Coverage"
      env:
        TESTCLIENTSECRET: ${{ secrets.TESTCLIENTSECRET }}

    - name: Coverage
      uses: codecov/codecov-action@v3
      with:
        file: coverage.cobertura.xml

    - name: Docker Push
      if: steps.semantic.outputs.new_release_published == 'true'
      run: |
        echo ${{ secrets.GITHUB_TOKEN }} | docker login ghcr.io -u ${GITHUB_ACTOR} --password-stdin
        docker tag ingress-nginx-validate-jwt ghcr.io/${GITHUB_REPOSITORY,,}/ingress-nginx-validate-jwt:${{ (steps.semantic.outputs.new_release_published && steps.semantic.outputs.new_release_version) }}
        docker push ghcr.io/${GITHUB_REPOSITORY,,}/ingress-nginx-validate-jwt:${{ (steps.semantic.outputs.new_release_published && steps.semantic.outputs.new_release_version) }}

    - name: Docker Push Docker Hub
      if: steps.semantic.outputs.new_release_published == 'true'
      run: |
        echo ${{ secrets.DOCKER_HUB_TOKEN }} | docker login -u ivanjosipovic --password-stdin
        docker tag ingress-nginx-validate-jwt ivanjosipovic/ingress-nginx-validate-jwt:${{ (steps.semantic.outputs.new_release_published && steps.semantic.outputs.new_release_version) }}
        docker push ivanjosipovic/ingress-nginx-validate-jwt:${{ (steps.semantic.outputs.new_release_published && steps.semantic.outputs.new_release_version) }}

    - name: Semantic Release
      if: steps.semantic.outputs.new_release_published == 'true'
      uses: cycjimmy/semantic-release-action@v2
      with:
        semantic_version: ${{ env.semantic_version }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Install Helm
      if: steps.semantic.outputs.new_release_published == 'true'
      uses: azure/setup-helm@v3
      with:
        token: ${{ secrets.GITHUB_TOKEN }}

    - name: Update Helm Version
      if: steps.semantic.outputs.new_release_published == 'true'
      shell: bash
      run: |
          sed -i 's/0.0.1/${{ (steps.semantic.outputs.new_release_published && steps.semantic.outputs.new_release_version) || '0.0.1' }}/' ./charts/ingress-nginx-validate-jwt/Chart.yaml

    - name: Run chart-releaser
      if: steps.semantic.outputs.new_release_published == 'true'
      uses: helm/chart-releaser-action@v1
      env:
        CR_TOKEN: "${{ secrets.GITHUB_TOKEN }}"